# Урок первый 1.2
# Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.


def seconds_to_time(seconds):
    seconds = int(seconds)
    ss = seconds % 60
    mm = (seconds // 60) % 60
    hh = seconds // 3600
    return "%02d:%02d:%02d" % (hh, mm, ss)


# input_seconds = input("Введите кол-во секунд: ")
print(seconds_to_time(3685))


# Урок первый 1.3
# Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3.
# Считаем 3 + 33 + 333 = 369
def triplet_sum_number(number):
    n1 = number
    n2 = n1 * 10 + n1
    n3 = n2 * 10 + n1
    return n1 + n2 + n3  # Отвратительная реализация


print(triplet_sum_number(3))


# Урок первый 1.4
# Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции


def max_digit(task_number):
    max_number = -1
    while task_number > 10:
        number_to_check = task_number % 10
        task_number //= 10
        if number_to_check > max_number:
            max_number = number_to_check
    return max_number


print(max_digit(123456789))

# Урок первый 1.5

# Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом
# работает фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
# Выведите соответствующее сообщение. Если фирма отработала с прибылью, вычислите
# рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

proceeds = int(input("Введите суммы выручки: "))
costs = int(input("Введите сумму издержки: "))
expenses = proceeds - costs
if expenses < 0:
    print("Фирма отработала с убытками")
else:
    print(proceeds // expenses)
    staff_count = int(input("Введите кол-во сотрудников "))
    print(expenses // staff_count)


# Урок первый 1.6
# Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

min_km = int(input("Сколько спортсмен пробегает? "))
target_km = int(input("Сколько должен пробежать? "))
days = 1
while min_km <= target_km:
    print(f"{days}-й день: {min_km}")
    min_km = min_km + (min_km * .1)
    days += 1

print(f"Ответ: на {days}-й день спортсмен достиг результата — не менее {min_km} км.")
